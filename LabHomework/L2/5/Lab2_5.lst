     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 04                          a db 4
    15 00000001 01                          b db 1
    16 00000002 07                          c db 7
    17 00000003 09                          d db 9
    18 00000004 0300                        e dw 3
    19 00000006 0200                        f dw 2
    20 00000008 0500                        g dw 5
    21 0000000A 0600                        h dw 6
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 A0[00000000]                    mov al,[a]
    27 00000005 0205[01000000]                  add al,[b]
    28 0000000B B402                            mov ah,2
    29 0000000D F6E4                            mul ah ;ax=2*(a+b)
    30 0000000F 662B05[04000000]                sub ax,[e]
    31                                          
    32                                          ; exit(0)
    33 00000016 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000018 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
